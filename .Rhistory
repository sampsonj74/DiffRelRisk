a      =  barplot(ratio,col=col,ylim=c(0,max(ratio,na.rm=T)+0.1),main=mainx,ylab="Survey:Trial Ratio")
if (!is.na(tline)) lines(c(a[1,1],a[nrow(a),1]),c(tline,tline),col="orange",lwd=2,lty=2)
lll    = a[,1]
ok =c(1:length(lll))[c(1:length(lll))%%2==0]
text(lll[ok],-0.01, srt = 90, adj= 1, xpd = TRUE, labels = resx[ok,1] , cex=0.8)
legend(1,max(ratio,na.rm=T)+0.1,c("1/4","1/6"),fill=tcol)
}
drawPic(res,"Residences")
drawPic(reg,"Registrations")
drawPic(enr,"Enrollments",0.25)
rm(list=ls())
res <- read.csv("H:/Projects/HPV/DSMB/weeklyReports/residences.csv",stringsAsFactors=FALSE,header=TRUE)[-1,]
reg <- read.csv("H:/Projects/HPV/DSMB/weeklyReports/registrations.csv",stringsAsFactors=FALSE,header=TRUE)[-1,]
enr <- read.csv("H:/Projects/HPV/DSMB/weeklyReports/enrollments.csv",stringsAsFactors=FALSE,header=TRUE)[-1,]
drawPic <- function(resx,mainx,tline=NA){
switch   = "2018-07-16"
tcol     = c("black","red")
col      = rep(tcol[1],nrow(resx))
col[resx[,1]==switch] = tcol[2]
for (i in 2:nrow(resx)) if(col[i-1]==tcol[2]) col[i]=tcol[2]
if (mainx != "Enrollments") ratio  = as.numeric(resx[,3])/as.numeric(resx[,2])
if (mainx == "Enrollments") ratio  = as.numeric(resx[,3])/(as.numeric(resx[,3])+as.numeric(resx[,2]))
a      =  barplot(ratio,col=col,ylim=c(0,max(ratio,na.rm=T)+0.1),main=mainx,ylab="Survey:Trial Ratio")
if (!is.na(tline)) lines(c(a[1,1],a[nrow(a),1]),c(tline,tline),col="orange",lwd=2,lty=2)
lll    = a[,1]
ok =c(1:length(lll))[c(1:length(lll))%%2==0]
text(lll[ok],-0.01, srt = 90, adj= 1, xpd = TRUE, labels = resx[ok,1] , cex=0.8)
legend(1,max(ratio,na.rm=T)+0.1,c("1/4","1/6"),fill=tcol)
}
drawPic(res,"Residences")
rm(list=ls())
res <- read.csv("H:/Projects/HPV/DSMB/weeklyReports/residences.csv",stringsAsFactors=FALSE,header=TRUE)[-1,]
reg <- read.csv("H:/Projects/HPV/DSMB/weeklyReports/registrations.csv",stringsAsFactors=FALSE,header=TRUE)[-1,]
enr <- read.csv("H:/Projects/HPV/DSMB/weeklyReports/enrollments.csv",stringsAsFactors=FALSE,header=TRUE)[-1,]
drawPic <- function(resx,mainx,tline=NA){
switch   = "2018-07-16"
tcol     = c("black","red")
col      = rep(tcol[1],nrow(resx))
col[resx[,1]==switch] = tcol[2]
for (i in 2:nrow(resx)) if(col[i-1]==tcol[2]) col[i]=tcol[2]
if (mainx != "Residences") {ratio  = as.numeric(resx[,3])/as.numeric(resx[,2])
ylabx="Survey:Trial Ratio"}
if (mainx == "Residences") {ratio  = as.numeric(resx[,3])/(as.numeric(resx[,3])+as.numeric(resx[,2]))
ylabx="Survey:Ttotal Ratio"}
a      =  barplot(ratio,col=col,ylim=c(0,max(ratio,na.rm=T)+0.1),main=mainx,ylab=ylabx)
if (!is.na(tline)) lines(c(a[1,1],a[nrow(a),1]),c(tline,tline),col="orange",lwd=2,lty=2)
lll    = a[,1]
ok =c(1:length(lll))[c(1:length(lll))%%2==0]
text(lll[ok],-0.01, srt = 90, adj= 1, xpd = TRUE, labels = resx[ok,1] , cex=0.8)
legend(1,max(ratio,na.rm=T)+0.1,c("1/4","1/6"),fill=tcol)
}
drawPic(res,"Residences")
drawPic(reg,"Registrations")
drawPic(enr,"Enrollments",0.25)
drawPic(res,"Residences")
drawPic(reg,"Registrations")
drawPic(enr,"Enrollments",0.25)
0.25*0.2
library("sas7bdat")
library("survival")
# library("xtable")
r         <- function(t,n) round(t,n)
createNew <- 0
###LOAD or CREATE THE DATASETS
if (createNew==1){
makeNumeric <- function(tm) {out <- matrix(nrow=nrow(tm),ncol=ncol(tm))
for (i in 1:ncol(tm)) out[,i] <- as.numeric(as.character(tm[,i]))
colnames(out) <- colnames(tm)
as.data.frame(out)}
toupper2 <- function(t) {   t2 <- toupper(as.character(t))
t3 <- paste0(ifelse(substr(t2,1,1)=="_","X",""),t2)  }
data=read.sas7bdat("H:/Projects/metabolomics/Demtrius/age/metabolites.sas7bdat")
phe1=read.sas7bdat("H:/Projects/metabolomics/Demtrius/age/ctrl523_fatal_mort.sas7bdat")
colnames(phe1) <- toupper(colnames(phe1))
phe2 = phe1[,c("AGE_DEATH","AGE_DEATH_V2","DEATH","BMI","AGE_RAND","NGROUP","RANDYEAR","NCIG","BPSYST",                                   "BPDIAST","CREATININE","COTININE_N_OXIDE","SER_CHOL","ATBC","HXDIS22","HXDIS31")]
colnames(phe2) = c("AgeExit","AgeEntry","Death","BMI","AgeBlood","Cause","Randyear","ncig","SBP",
"DBP","Creatinine","CotOx","Chol","ATBC","HyperTen","Diab")
makeNumeric <- function(tm) {out <- matrix(nrow=nrow(tm),ncol=ncol(tm))
for (i in 1:ncol(tm)) out[,i] <- as.numeric(as.character(tm[,i]))
colnames(out) <- colnames(tm)
as.data.frame(out)}
toupper2 <- function(t) {   t2 <- toupper(as.character(t))
t3 <- paste0(ifelse(substr(t2,1,1)=="_","X",""),t2)  }
data=read.sas7bdat("H:/Projects/metabolomics/Demtrius/age/metabolites.sas7bdat")
phe1=read.sas7bdat("H:/Projects/metabolomics/Demtrius/age/ctrl523_fatal_mort.sas7bdat")
colnames(phe1) <- toupper(colnames(phe1))
phe2 = phe1[,c("AGE_DEATH","AGE_DEATH_V2","DEATH","BMI","AGE_RAND","NGROUP","RANDYEAR","NCIG","BPSYST",                                   "BPDIAST","CREATININE","COTININE_N_OXIDE","SER_CHOL","ATBC","HXDIS22","HXDIS31")]
colnames(phe2) = c("AgeExit","AgeEntry","Death","BMI","AgeBlood","Cause","Randyear","ncig","SBP",
"DBP","Creatinine","CotOx","Chol","ATBC","HyperTen","Diab")
sort(colnames(phe1))
phe1[,"HDL"]
phe1[,"LDL"]
plot(phe1[,"HDL"],phe1[,"SER_CHOL"])
sort(colnames(phe1))[-c(1:1000)]
sort(colnames(phe1))
colnames(data)
data[,data["SUPER_PATHWAY"]=="Carbohydrate"]
table(data["SUPER_PATHWAY"])
data[data[,"SUPER_PATHWAY"]=="Carbohydrate",]
0.05/554
beta   <- log(1.3)
logiti <- function(t) exp(t)/(1+exp(t))
n      <- 100000
X      <- rnorm(n)
p      <- logit(-3 + beta*x)
hist(p)
p      <- logiti(-3 + beta*x)
hist(p)
logiti <- function(t) exp(t)/(1+exp(t))
n      <- 100000
X      <- rnorm(n)
p      <- logiti(-3 + beta*X)
hist(p)
library(survival)
?clogit
logiti  <- function(t) exp(t)/(1+exp(t))
n       <- 100000
X2      <- rnorm(n)
p       <- logiti(-3 + beta*X2)
Y2      <- rbinom(n,1,p)
samp    <- c(sample(c(1:n)[Y==1],ncase),sample(c(1:n)[Y==0],2*ncase))
Y       <- Y2[samp]
X       <- X2[samp]
ID      <- rep(c(1:ncase),3)
tm      <- clogit(Y~X+strata(ID))
logiti  <- function(t) exp(t)/(1+exp(t))
n       <- 100000
X2      <- rnorm(n)
p       <- logiti(-3 + beta*X2)
Y2      <- rbinom(n,1,p)
samp    <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y       <- Y2[samp]
X       <- X2[samp]
ID      <- rep(c(1:ncase),3)
tm      <- clogit(Y~X+strata(ID))
library(survival)
beta   <- log(1.3)
ncase  <- 9265
logiti  <- function(t) exp(t)/(1+exp(t))
n       <- 100000
X2      <- rnorm(n)
p       <- logiti(-3 + beta*X2)
Y2      <- rbinom(n,1,p)
samp    <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y       <- Y2[samp]
X       <- X2[samp]
ID      <- rep(c(1:ncase),3)
tm      <- clogit(Y~X+strata(ID))
library(survival)
beta   <- log(1.3)
ncase  <- 9265
logiti  <- function(t) exp(t)/(1+exp(t))
n       <- 1000000
X2      <- rnorm(n)
p       <- logiti(-3 + beta*X2)
Y2      <- rbinom(n,1,p)
samp    <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y       <- Y2[samp]
X       <- X2[samp]
ID      <- rep(c(1:ncase),3)
tm      <- clogit(Y~X+strata(ID))
tm
tm$coef
summary(tm)$coef
mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))/(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
(mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))
(mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))/(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
beta   <- log(1.1)
ncase  <- 9265
nsim   <- 100
psim   <- matrix(nrow=nsim,ncol=1)
q1q4   <- matrix(nrow=nsim,ncol=1)
for (ts in 1:nsim){
logiti  <- function(t) exp(t)/(1+exp(t))
n       <- 1000000
X2      <- rnorm(n)
p       <- logiti(-3 + beta*X2)
Y2      <- rbinom(n,1,p)
samp    <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y       <- Y2[samp]
X       <- X2[samp]
ID      <- rep(c(1:ncase),3)
tm      <- clogit(Y~X+strata(ID))
psim[ts] <- summary(tm)$coef[1,5]
q1q4[ts] <- (mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))/(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
}
mean(psim<0.05)
mean(q1q4)
psim
log(1.1)
beta   <- log(1.05)
ncase  <- 9265
nsim   <- 10
psim   <- matrix(nrow=nsim,ncol=1)
q1q4   <- matrix(nrow=nsim,ncol=1)
for (ts in 1:nsim){
logiti  <- function(t) exp(t)/(1+exp(t))
n       <- 1000000
X2      <- rnorm(n)
p       <- logiti(-3 + beta*X2)
Y2      <- rbinom(n,1,p)
samp    <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y       <- Y2[samp]
X       <- X2[samp]
ID      <- rep(c(1:ncase),3)
tm      <- clogit(Y~X+strata(ID))
psim[ts] <- summary(tm)$coef[1,5]
q1q4[ts] <- (mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))/(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
}
hist(psim)
mean(psim<0.05)
mean(q1q4)
OR.per.SD  <- c(1.01,1.03,1.05,1.10)
nor        <- length(OR.per.SD)
OR.q1q4    <- matrix(nrow=nor,ncol=1)
poss.ncase <- c(1000,5000,7000,9000)
npn        <- length(poss.ncase)
power1 <- power5  <- matrix(nrow=nor,ncol=npn)
nsim   <- 5
for (i in 1:nor) for (j in 1:npn){
beta   <- log(OR.per.SD[i])
ncase  <- poss.ncase[j]
psim   <- matrix(nrow=nsim,ncol=1)
q1q4   <- matrix(nrow=nsim,ncol=1)
for (ts in 1:nsim){
logiti   <- function(t) exp(t)/(1+exp(t))
n        <- 1000000
X2       <- rnorm(n)
p        <- logiti(-3 + beta*X2)
Y2       <- rbinom(n,1,p)
samp     <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y        <- Y2[samp]
X        <- X2[samp]
ID       <- rep(c(1:ncase),3)
tm       <- clogit(Y~X+strata(ID))
psim[ts] <- summary(tm)$coef[1,5]
q1q4[ts] <- (mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))/(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
}
power1[i,j] <- mean(psim<0.05)
power5[i,j] <- mean(psim<0.05/5)
if (j==1) OR.q1q4[i,j] <- mean(q1q4)
}
cbind(OR.per.SD,OR.q1q4,round(power1,2))
outTab <- cbind(OR.per.SD,OR.q1q4,round(power1,2))
colnames(outTab) <- ("OR per SD","OR Q4:Q1","1000","5000","7000","9000")
write.table(outTab,file="H:/Projects/estrogen/powerFin.txt",quote=F,sep="\t",colnames=T,rownames=F)
outTab <- cbind(OR.per.SD,OR.q1q4,round(power1,2))
colnames(outTab) <- c("OR per SD","OR Q4:Q1","1000","5000","7000","9000")
write.table(outTab,file="H:/Projects/estrogen/powerFin.txt",quote=F,sep="\t",col.names=T,row.names=F)
library(survival)
OR.per.SD  <- c(1.01,1.03,1.05,1.10)
nor        <- length(OR.per.SD)
OR.q1q4    <- matrix(nrow=nor,ncol=1)
poss.ncase <- c(1000,5000,7000,9000)
npn        <- length(poss.ncase)
power1 <- power5  <- matrix(nrow=nor,ncol=npn)
nsim   <- 100
set.seed(1)
for (i in 1:nor) for (j in 1:npn){
beta   <- log(OR.per.SD[i])
ncase  <- poss.ncase[j]
psim   <- matrix(nrow=nsim,ncol=1)
q1q4   <- matrix(nrow=nsim,ncol=1)
for (ts in 1:nsim){
logiti   <- function(t) exp(t)/(1+exp(t))
n        <- 1000000
X2       <- rnorm(n)
p        <- logiti(-3 + beta*X2)
Y2       <- rbinom(n,1,p)
samp     <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y        <- Y2[samp]
X        <- X2[samp]
ID       <- rep(c(1:ncase),3)
tm       <- clogit(Y~X+strata(ID))
psim[ts] <- summary(tm)$coef[1,5]
q1q4[ts] <- (mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))/(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
}
power1[i,j] <- mean(psim<0.05)
power5[i,j] <- mean(psim<0.05/5)
if (j==1) OR.q1q4[i,j] <- mean(q1q4)
}
outTab <- cbind(OR.per.SD,OR.q1q4,round(power1,2))
colnames(outTab) <- c("OR per SD","OR Q4:Q1","1000","5000","7000","9000")
write.table(outTab,file="H:/Projects/estrogen/powerFin.txt",quote=F,sep="\t",col.names=T,row.names=F)
outTab <- cbind(OR.per.SD,OR.q1q4,round(power1,2),round(power5,2))
colnames(outTab) <- c("OR per SD","OR Q4:Q1","1000","5000","7000","9000","1000","5000","7000","9000")
outTab
OR.per.SD  <- c(1.01,1.03,1.05,1.10)
nor        <- length(OR.per.SD)
OR.q1q4    <- matrix(nrow=nor,ncol=1)
poss.ncase <- c(1000,5000,7000,9000)
npn        <- length(poss.ncase)
power1 <- power5  <- matrix(nrow=nor,ncol=npn)
nsim   <- 5000
set.seed(1)
for (i in 1:nor) for (j in 1:npn){
beta   <- log(OR.per.SD[i])
ncase  <- poss.ncase[j]
psim   <- matrix(nrow=nsim,ncol=1)
q1q4   <- matrix(nrow=nsim,ncol=1)
for (ts in 1:nsim){
logiti   <- function(t) exp(t)/(1+exp(t))
n        <- 1000000
X2       <- rnorm(n)
p        <- logiti(-3 + beta*X2)
Y2       <- rbinom(n,1,p)
samp     <- c(sample(c(1:n)[Y2==1],ncase),sample(c(1:n)[Y2==0],2*ncase))
Y        <- Y2[samp]
X        <- X2[samp]
ID       <- rep(c(1:ncase),3)
tm       <- clogit(Y~X+strata(ID))
psim[ts] <- summary(tm)$coef[1,5]
q1q4[ts] <- (mean(Y2[X2>qnorm(0.75)])/(1-mean(Y2[X2>qnorm(0.75)])))/(mean(Y2[X2<qnorm(0.25)])/(1-mean(Y2[X2<qnorm(0.25)])))
}
power1[i,j] <- mean(psim<0.05)
power5[i,j] <- mean(psim<0.05/4)
if (j==1) OR.q1q4[i,j] <- mean(q1q4)
}
outTab <- cbind(OR.per.SD,round(OR.q1q4,2),round(power1,2),round(power5,2))
colnames(outTab) <- c("OR per SD","OR Q4:Q1","1000","5000","7000","9000","1000","5000","7000","9000")
write.table(outTab,file="H:/Projects/estrogen/powerFin.txt",quote=F,sep="\t",col.names=T,row.names=F)
outTab
n       <- 100000
RR.SNP  <- 1.02
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[1,]
n       <- 10000
RR.SNP  <- 1.01
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[1,]
log(RR.SNP)
n       <- 10000
RR.SNP  <- 1.005
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[1,]
summary(glm(Y~SNP,family=binomial(link="logit")))$coef
n       <- 100000
RR.SNP  <- 1.05
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
n       <- 100000
RR.SNP  <- 1.05
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
n       <- 100000
RR.SNP  <- 1.5
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(PRS+log(RR.SNP)*SNP,0,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
log(RR.SNP)
PRS
hist(LIAB[SNP>=0.5])
t.test(LIAB[SNP>=0.5],LIAB[SNP<0.5])
n       <- 100000
RR.SNP  <- 1.5
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(n,PRS+log(RR.SNP)*SNP,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(n,PRS+log(RR.SNP)*SNP,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,family=binomial(link="logit")))$coef[2,]
summary(glm(Y~SNP+PRS,family=binomial(link="logit")))$coef[2,]
<- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(n,PRS+log(RR.SNP)*SNP,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
summary(glm(Y~SNP,    family=binomial(link="logit")))$coef[2,]
summary(glm(Y~SNP+PRS,family=binomial(link="logit")))$coef[2,]
nsim    <- 10
sMat    <- matrix(nrow=nsim,ncol=2)
for (ts in 1:nsim){
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(n,PRS+log(RR.SNP)*SNP,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
sMat[ts,1] <- summary(glm(Y~SNP,    family=binomial(link="logit")))$coef[2,4]
sMat[ts,1] <- summary(glm(Y~SNP+PRS,family=binomial(link="logit")))$coef[2,4]
}
plot(-log10(sMat[,1]),-log10(sMat[,2]))
nsim    <- 10
sMat    <- matrix(nrow=nsim,ncol=2)
for (ts in 1:nsim){
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.2
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(n,PRS+log(RR.SNP)*SNP,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
sMat[ts,1] <- summary(glm(Y~SNP,    family=binomial(link="logit")))$coef[2,4]
sMat[ts,2] <- summary(glm(Y~SNP+PRS,family=binomial(link="logit")))$coef[2,4]
}
plot(-log10(sMat[,1]),-log10(sMat[,2]))
abline(0,1,col="red")
nsim    <- 10
sMat    <- matrix(nrow=nsim,ncol=2)
for (ts in 1:nsim){
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.4
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(n,PRS+log(RR.SNP)*SNP,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
sMat[ts,1] <- summary(glm(Y~SNP,    family=binomial(link="logit")))$coef[2,4]
sMat[ts,2] <- summary(glm(Y~SNP+PRS,family=binomial(link="logit")))$coef[2,4]
}
plot(-log10(sMat[,1]),-log10(sMat[,2]))
abline(0,1,col="red")
nsim    <- 10
sMat    <- matrix(nrow=nsim,ncol=2)
for (ts in 1:nsim){
n       <- 100000
RR.SNP  <- 1.1
Her.PRS <- 0.4
SNP     <- 0.5*rbinom(n,2,0.2)
PRS     <- rnorm(n,0,sqrt(Her.PRS))
LIAB    <- rnorm(n,PRS+log(RR.SNP)*SNP,sqrt(1-Her.PRS))
Y       <- ifelse(LIAB>qnorm(0.95),1,0)
sMat[ts,1] <- summary(glm(Y~SNP,    family=binomial(link="logit")))$coef[2,4]
sMat[ts,2] <- summary(glm(Y~SNP+PRS,family=binomial(link="logit")))$coef[2,4]
}
plot(-log10(sMat[,1]),-log10(sMat[,2]))
abline(0,1,col="red")
y2     <- rbind(runif(14,100,200),runif(14,100,200),runif(14,100,200),runif(14,100,200),runif(14,100,200))
y      <- y2/matrix(colSums(y2),nrow=nrow(y2),ncol=ncol(y2),byrow=T)
lab  <- c(paste(seq(0,24,by=2),"-",seq(2,26,by=2)),">26")
a      <- barplot(y,ylim=c(0,2),main="Visit Status By Week",legend=c("6-month Visit Complete",
"Initial 6-month visit (i.e. not counting reschedules) Scheduled/Future",
"Initial 6-month visit missed, but rescheduled",
"Initial 6-month visit missed, not rescheduled",
"Initial 6-month visit not scheduled"),xlab="Weeks Since 6-Month Anniversary")
text(a,-.01, srt = 90, adj= 1, xpd = TRUE, labels = lab , cex=0.8)
y2     <- rbind(runif(14,100,200),runif(14,100,200),runif(14,100,200),runif(14,100,200),runif(14,100,200))
y      <- y2/matrix(colSums(y2),nrow=nrow(y2),ncol=ncol(y2),byrow=T)
lab  <- c(paste(seq(0,24,by=2),"-",seq(2,26,by=2)),">26")
a      <- barplot(y,ylim=c(0,2),main="Visit Status By Week",legend=c("6-month Visit Complete",
"Initial 6-month visit (i.e. not counting reschedules) Scheduled/Future",
"Initial 6-month visit missed, but rescheduled",
"Initial 6-month visit missed, not rescheduled",
"Initial 6-month visit not scheduled"),xlab="Weeks Since 6-Month Anniversary")
text(a,-.01, srt = 90, adj= 1, xpd = TRUE, labels = lab , cex=0.8)
